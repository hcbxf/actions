name: ARM docker OpenWrt CI
on:
  workflow_dispatch:
env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master  
  img_name: open/openwrt-aarch
  tag: latest
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout - clone repository
      uses: actions/checkout@main

    - name: Install - system build dependencies
      run: |
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc || echo "clean partly"
        sudo -E apt-get -qq update
        sudo -E apt-get -yqq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
                    bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
                    g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
                    libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 \
                    libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lld llvm lrzsz mkisofs msmtp \
                    nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-ply \
                    python3-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig \
                    texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev pigz
        sudo -E apt-get -yqq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Download - openwrt source download
      run: |
        git clone $REPO_URL openwrt
        
    - name: Update - openwrt source update and install 
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
    - name: Config - arm docker openwrt build config
      run: |
        cp .config.arm.openwrt.docker openwrt/.config
        cd openwrt
        make defconfig
      
    - name: Download - openwrt build dependencies
      run: |
        cd openwrt
        make download
        
    - name: Build - make openwrt source
      run: |
        cd openwrt
        make -j$(nproc)
        
    - name: Docker file - configure Docker file
      run: |
        mkdir arm_docker_openwrt
        cp openwrt/bin/targets/armsr/armv8/immortalwrt-armsr-armv8-generic-rootfs.tar.gz arm_docker_openwrt
        
    - name: Image - build docker image
      run: |
        cd arm_docker_openwrt
        echo "FROM scratch
              ADD  immortalwrt-armsr-armv8-generic-rootfs.tar.gz /
              EXPOSE 22 80 443
              ENTRYPOINT [\"/sbin/init\"]"  > Dockerfile
        sudo DOCKER_BUILDKIT=1 docker build --platform=linux/arm64 -t $img_name:$tag .
        sudo docker save $img_name:$tag | pigz -9 > ./docker-img-openwrt-aarch64-$tag.gz
        
        
    - name: Upload - push to artifact file
      uses: actions/upload-artifact@main
      with:
        name: arm-openwrt-docker
        path: arm_docker_openwrt/*.gz
